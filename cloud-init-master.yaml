package_update: true
package_upgrade: true

apt:
  sources:
    docker.list:
      source: deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

packages:
  - docker-ce
  - docker-ce-cli
  - python3.8-venv
  - python3-pip

runcmd:
 - [ sh, -c, echo "=========git clone=========" ]
 - git -C /home/ubuntu clone https://github.com/jrkessl/exampleMicroservice
 - chown ubuntu:ubuntu -R /home/ubuntu/exampleMicroservice
 - chmod 744 -R /home/ubuntu/exampleMicroservice

 - [ sh, -c, echo "=========nano $HOME/.nanorc=========" ]
 - echo "set linenumbers" > /home/ubuntu/.nanorc
 - chown ubuntu:ubuntu /home/ubuntu/.nanorc
 - chmod 744 /home/ubuntu/.nanorc

 - [ sh, -c, echo "=========adicionando ubuntu ao grupo do docker=========" ]
 - sudo gpasswd -a ubuntu docker 

 - [ sh, -c, echo "=========instalar docker compose (usando pip)=========" ] 
 - pip install docker-compose
 - export PATH="/home/ubuntu/.local/bin:$PATH"
 
 - [ sh, -c, echo "=========instalar aws cli v2=========" ] 
 - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"  
 - sudo apt install unzip
 - unzip awscliv2.zip
 - sudo ./aws/install


# daqui pra frente são os comandos úteis para instalar e fazer funcionar interface gráfica, 
# navegador e minikube.


 - [ sh, -c, echo "=========instalar x2go=========" ] 
 - sudo apt-add-repository ppa:x2go/stable
 - sudo apt-get update
 - sudo apt-get install x2goserver x2goserver-xsession -y > /tmp/x2go_server_install_log.txt
 
 - [ sh, -c, echo "=========instalar mate=========" ] 
 - sudo apt install mate-desktop-environment -y > /tmp/mate_install_log.txt

 - [ sh, -c, echo "=========habilitar login com senha (usuário ubuntu)=========" ] 
 - sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
 - sudo service sshd restart
 - [ sh, -c, echo "===obs. falta definir senha do usuario ubuntu===" ] 

 - [ sh, -c, echo "=========instalar minikube=========" ] 
 - curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
 - sudo dpkg -i minikube_latest_amd64.deb
 
 - [ sh, -c, echo "=========instalar Chrome=========" ] 
 - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb 
 - sudo dpkg -i google-chrome-stable_current_amd64.deb
 
final_message: "The system is finally up, after $UPTIME seconds"



# Where are the logs?
# Cloud-init uses two files to log to:
# /var/log/cloud-init-output.log
# : captures the output from each stage of cloud-init when it runs
# /var/log/cloud-init.log: very detailed log with debugging output, detailing each action taken
# /run/cloud-init: contains logs about how cloud-init decided to enable or disable itself, as well as what platforms/datasources were detected. These logs are most useful when trying to determine what cloud-init ran or did not run.

#como lançar a instância com bootstrapping:
#multipass launch --name a1 --cloud-init ./cloud_init.yaml
#multipass launch --name ipis --cloud-init ./cloud_init2.yaml --cpus 4 --mem 4G --disk 20G -v
