Instrucoes de como fazer funcionar esse projeto. 

2021-09-11

Artigo de origem: 
https://realpython.com/python-microservices-grpc/#example-implementation

****************************************************************************************
****************************************************************************************
***************** Instrucao para o microservico "meuservico" ***************************
****************************************************************************************
****************************************************************************************

********************* instrução 1/2: como fazer funcionar do zero **********************

1. criar arquivo /protobufs/<nome do servico>.proto // Define a API do serviço.
2. criar arquivo <nome do servico>/requirements.txt 
3. criar, ativar e configurar o ambiente virtual: 
python3 -m venv venv0
source venv0/bin/activate  
    (o comando acima é na pasta do projeto)
cd <nome do servico>
python -m pip install -r requirements.txt

4. gerar o código python:
python -m grpc_tools.protoc -I ../protobufs --python_out=. --grpc_python_out=. ../protobufs/<nome do servico>.proto

5. criar o arquivo cliente cliente.py
6. criar o arquivo servidor <nome do servico>.py
7. rodar o servidor: python3 <nome do servico>.py (lembrar de estar com o ambiente virtual ativado) e, em outra janela, rodar o cliente.

********************* instrução 2/2: como fazer funcionar o projeto baixado do github *******************

1. baixar o projeto (com git clone)
2. cd exampleMicroservice
3. python3 -m venv venv0
4. source venv0/bin/activate  
5. cd meuservico
6. python -m pip install -r requirements.txt
7. rodar o servidor: python3 meuservico.py
8. voltar à pasta raiz do projeto (exampleMicroservices) e repetir a partir step 4 e 5 pra rodar o cliente
9. rodar o cliente: python3 cliente.py 

****************************************************************************************
****************************************************************************************
******************* Instrucao para a pagina web com Flask ******************************
****************************************************************************************
****************************************************************************************

********************* instrução 1/2: como fazer funcionar do zero **********************

0. fazer git clone deste commit:
https://devopscube.com/checkout-clone-specific-git-commit-id-sha/
1. crie a pasta "servidorweb" na raiz do projeto
2. crie o arquivo "servidorweb\requirements.txt"; o conteudo do arquivo esta no arquivo homonimo no Repositorio no Github;
3. habilitar o ambiente virtual. Na pasta do projeto (exampleMicroservices):
 $ sudo apt-get update
 $ sudo apt-get upgrade
 $ sudo apt install python3.8-venv
 $ python3 -m venv venv0
 $ source venv0/bin/activate
4. instale os requerimentos:
 $ python -m pip install -r servidorweb/requirements.txt
5. crie o arquivo servidorweb/servidorweb.py; o conteudo do arquivo esta no Repo;
6. crie o arquivo servidorweb/templates/homepage.html; o conteudo do arquivo esta no Repo;
7. gere o codigo do meuservido na pasta do servidorweb (exampleMicroservices/servidorweb):
 $ python -m grpc_tools.protoc -I ../protobufs --python_out=. --grpc_python_out=. ../protobufs/meuservico.proto
8. rode o meuservico em outra janela. Em outra janela, faça:
 $ cd exampleMicroservice
 $ source venv0/bin/activate
 $ cd meuservico/
 $ python meuservico.py
9. (de volta na janela anterior) rode a aplicacao Flask:
 $ FLASK_APP=servidorweb.py flask run
10. teste (em uma terceira janela):
 $ curl http://127.0.0.1:5000/
11. Vai dar pau pois neste commit em particular o meuservico está ouvindo na porta 50051 mas o servidorweb está buscando na porta 50052. Corrija isso na linha 17 do arquivo servidorweb.py

********************* instrução 2/2: como fazer funcionar o projeto baixado do github *******************

1. git clone https://github.com/jrkessl/exampleMicroservice
2. cd exampleMicroservice
3. instalar e habilitar ambiente virtual:
 $ sudo apt-get update
 $ sudo apt-get upgrade
 $ sudo apt install python3.8-venv
 $ python3 -m venv venv0
 $ source venv0/bin/activate
4. python -m pip install -r servidorweb/requirements.txt
5. rodar o meuserviço:
 $ cd meuservico/
 $ python meuservico.py
6. rodar o servidorweb. Em outro terminal: 
 $ cd exampleMicroservice/
 $ source venv0/bin/activate
 $ cd servidorweb/
 $ FLASK_APP=servidorweb.py flask run
7. testar o servidor web. Em outro terminal: $ curl http://127.0.0.1:5000
 

